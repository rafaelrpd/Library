-- Queries
-- List all users and quantity of active borrowed books in total.
USE [LIBRARY];
SELECT
	[CLIENT].[CPF],
	[CLIENT].[NAME],
	[CLIENT].[REGISTRATION DATE],
	COUNT([BORROWED BOOK].[CLIENT ID]) AS 'TOTAL BORROWED'
FROM [CLIENT]
LEFT JOIN [BORROWED BOOK]
ON [BORROWED BOOK].[CLIENT ID] = [CLIENT].[CPF] AND [BORROWED BOOK].[RETURNED DATE] IS NULL
GROUP BY [CLIENT].[CPF], [CLIENT].[NAME], [CLIENT].[REGISTRATION DATE]
GO

-- List all users registered in current month
USE [LIBRARY];
SELECT * FROM [CLIENT] 
WHERE MONTH([REGISTRATION DATE]) = MONTH(GETDATE());
GO

-- List all books from a specific category
USE [LIBRARY];
SELECT
	[BOOK].[ISBN],
	[BOOK].[TITLE],
	[AUTHOR].[NAME] AS 'AUTHOR',
	[BOOK].[QUANTITY],
	[CATEGORY].[NAME] AS 'CATEGORY'
FROM [BOOK]
JOIN [CATEGORY]
ON [BOOK].[CATEGORY ID] = [CATEGORY].[CATEGORY ID]
JOIN [AUTHOR]
ON [BOOK].[AUTHOR ID] = [AUTHOR].[AUTHOR ID]
WHERE [CATEGORY].[NAME] = 'Action';
GO

-- List books by category
USE [LIBRARY];
SELECT
	[BOOK].[ISBN],
	[BOOK].[TITLE],
	[AUTHOR].[NAME] AS 'AUTHOR',
	[BOOK].[QUANTITY],
	[CATEGORY].[NAME] AS 'CATEGORY'
FROM [BOOK]
JOIN [CATEGORY]
ON [BOOK].[CATEGORY ID] = [CATEGORY].[CATEGORY ID]
JOIN [AUTHOR]
ON [BOOK].[AUTHOR ID] = [AUTHOR].[AUTHOR ID]
ORDER BY [CATEGORY].[CATEGORY ID];
GO

-- List all clients that have any book borrowed
USE [LIBRARY]
SELECT [CLIENT].* FROM [CLIENT]
JOIN [BORROWED BOOK]
ON [CPF] = [CLIENT ID]
WHERE [RETURNED DATE] IS NULL;
GO

-- Show data from specific client that have borrowed books and those books information with limit date and overtime if it applies
USE [LIBRARY]
SELECT 
	[CLIENT].*,
	[BORROWED BOOK].[ID] AS 'BORROWED ID',
	[BORROWED BOOK].[BOOK ID],
	[BOOK].[TITLE],
	[BORROWED BOOK].[BORROWED DATE],
	[BORROWED BOOK].[LIMIT DATE],
	[BORROWED BOOK].[RETURNED DATE],
	DATEDIFF(DAY, [RETURNED DATE], [LIMIT DATE]) AS OVERTIME
FROM [CLIENT]
JOIN [BORROWED BOOK]
ON [CLIENT].[CPF] = [BORROWED BOOK].[CLIENT ID]
JOIN [BOOK]
ON [BOOK].[ISBN] = [BORROWED BOOK].[BOOK ID]
WHERE [CPF] = '01933323352';
GO

-- Average borrowed books by month.
USE [LIBRARY]
SELECT
	MONTH([BORROWED DATE]) AS 'MONTH',
	CAST(AVG([TOTAL BORROWED]) AS FLOAT) / CAST(COUNT(*) AS FLOAT) AS [MONTHLY AVG]
FROM
(
	SELECT COUNT(*) AS [TOTAL BORROWED]
	FROM [BORROWED BOOK]
) AS [TOTAL BORROWED], [BORROWED BOOK]
GROUP BY MONTH([BORROWED DATE]);
GO
